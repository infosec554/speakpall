definitions:
  models.ChangePasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  models.GoogleAuthRequest:
    properties:
      code:
        description: OAuth authorization code
        example: 4/0AX4XfW...
        type: string
    required:
    - code
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.LoginResponse:
    properties:
      access_token:
        type: string
      id:
        type: string
      refresh_token:
        type: string
      role:
        type: string
    type: object
  models.LogoutRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  models.PasswordResetRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  models.ResetPasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      repeat_password:
        type: string
      token:
        type: string
    required:
    - new_password
    - repeat_password
    - token
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.SignupRequest:
    properties:
      country_code:
        type: string
      email:
        type: string
      level:
        type: string
      name:
        maxLength: 80
        minLength: 1
        type: string
      password:
        minLength: 6
        type: string
      target_lang:
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.SignupResponse:
    properties:
      id:
        type: string
    type: object
info:
  contact: {}
  description: Authentication and Authorization API
  title: Auth API
  version: "1.0"
paths:
  /auth/change-password:
    post:
      consumes:
      - application/json
      description: Change password (user must send old and new password)
      parameters:
      - description: Change password
        in: body
        name: change_password
        required: true
        schema:
          $ref: '#/definitions/models.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Change user password
      tags:
      - user
  /auth/google:
    post:
      consumes:
      - application/json
      description: Google OAuth code orqali login yoki ro‘yxatdan o‘tish (JWT tokenlar
        qaytaradi)
      parameters:
      - description: Google authorization code
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.GoogleAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Google orqali login yoki registratsiya
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: User login with email and password
      parameters:
      - description: Login credentials
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User login
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: 'JWT tokenlarni va sessionni bekor qiladi (minimal variant: cookie’larni
        tozalash)'
      parameters:
      - description: Logout request (refresh_token optional)
        in: body
        name: data
        schema:
          $ref: '#/definitions/models.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: Logout (chiqish)
      tags:
      - auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Return new access & refresh token using a valid refresh token
      parameters:
      - description: Refresh token
        in: body
        name: refresh
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Refresh access token
      tags:
      - auth
  /auth/request-password-reset:
    post:
      consumes:
      - application/json
      description: Send a password reset link to the user email
      parameters:
      - description: User email
        in: body
        name: email
        required: true
        schema:
          $ref: '#/definitions/models.PasswordResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Request password reset
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset the user password using the reset token
      parameters:
      - description: New password, repeat password, and token
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Reset user password
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user (name, email, password)
      parameters:
      - description: Signup data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SignupResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
