version: "3.8"

services:
  # -------- Main App --------
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    profiles: ["local"]                # local stack bilan birga ishlaydi
    env_file:
      - ./.env
    environment:
      MIGRATIONS_DIR: /app/migrations/postgres
    volumes:
      - ./migrations:/app/migrations:ro
    ports:
      - "${APP_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      # Distroless-da shell/wget yo‘q: /app/hc ni Dockerfile’da qo‘shib qo‘ying
      test: ["CMD", "/app/hc"]
      interval: 10s
      timeout: 3s
      retries: 20

  # -------- Local Development: Postgres --------
  postgres:
    image: postgres:15
    restart: always
    profiles: ["local"]
    env_file:
      - ./.env
    environment:
      POSTGRES_USER:     ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB:       ${POSTGRES_DB}
    ports:
      - "${POSTGRES_HOST_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 3s
      retries: 20

  # -------- Local Development: Redis --------
  redis:
    image: redis:7
    restart: always
    profiles: ["local"]
    env_file:
      - ./.env
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "${REDIS_HOST_PORT:-6380}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 5s
      timeout: 3s
      retries: 20

volumes:
  postgres_data:
  redis_data:
